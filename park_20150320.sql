USE PARK;
SET FOREIGN_KEY_CHECKS=0;

DROP TABLE IF EXISTS BREAK_POINT CASCADE;
DROP TABLE IF EXISTS MAP CASCADE;
DROP TABLE IF EXISTS PARK CASCADE;
DROP TABLE IF EXISTS POINT CASCADE;
DROP TABLE IF EXISTS USER CASCADE;

CREATE TABLE BREAK_POINT
(
	bk_id INTEGER NOT NULL COMMENT '拐点的id',
	posX INTEGER NOT NULL COMMENT '拐点在对应地图上的X坐标',
	posY INTEGER NOT NULL COMMENT '拐点在对应地图上的Y坐标',
	MAP_id INTEGER NOT NULL COMMENT '拐点所在地图的id',
	PRIMARY KEY (bk_id),
	KEY (MAP_id)
);


CREATE TABLE MAP
(
	posZ INTEGER NOT NULL,
	PARK_id INTEGER NOT NULL,
	MAP_url VARCHAR(255) NOT NULL,
	MAP_id INTEGER NOT NULL,
	PRIMARY KEY (MAP_id),
	KEY (PARK_id)
);


CREATE TABLE PARK
(
	PARK_id INTEGER NOT NULL COMMENT '停车场id',
	name VARCHAR(255) NOT NULL COMMENT '停车场的名称',
	price DOUBLE NOT NULL DEFAULT 0.00 COMMENT '收费标准 /每小时',
	allpos INTEGER NOT NULL COMMENT '车位总数',
	emppos INTEGER NOT NULL COMMENT '空车位总数',
	state BOOL NOT NULL DEFAULT true,
	PRIMARY KEY (PARK_id)
);


CREATE TABLE POINT
(
	POINT_id INTEGER NOT NULL COMMENT '节点的id',
	posX INTEGER NOT NULL DEFAULT 0 COMMENT '节点的X坐标',
	posY INTEGER NOT NULL DEFAULT 0 COMMENT '节点的Y坐标',
	posZ INTEGER NOT NULL DEFAULT 0 COMMENT '节点的Z坐标或层数，用于适应多层停车场',
	PARK_id INTEGER NOT NULL COMMENT '节点所在停车场的id',
	state BOOL NOT NULL DEFAULT false COMMENT 'state为false时为被占用或未激活,为true时为未被占用或已激活',
	type BOOL NOT NULL DEFAULT false COMMENT 'type为true时为用户节点,为false时为车位节点',
	PRIMARY KEY (POINT_id),
	KEY (PARK_id)
);


CREATE TABLE USER
(
	USER_id INTEGER NOT NULL COMMENT '用户id',
	USERPOINT_id INTEGER NOT NULL COMMENT '用户手持节点的id',
	carPOINT_id INTEGER NOT NULL COMMENT '车所在位置上方节点的id',
	startTime DATETIME NOT NULL,
	PARK_id INTEGER NOT NULL COMMENT '用户所在停车场的id（或层数）',
	state BOOL NOT NULL DEFAULT true,
	PRIMARY KEY (USER_id),
	KEY (PARK_id),
	KEY (USERPOINT_id),
	KEY (carPOINT_id)
);

SET FOREIGN_KEY_CHECKS=1;

ALTER TABLE BREAK_POINT ADD CONSTRAINT FK_BREAK_POINT_MAP 
	FOREIGN KEY (MAP_id) REFERENCES MAP (MAP_id);

ALTER TABLE MAP ADD CONSTRAINT FK_MAP_PARK 
	FOREIGN KEY (PARK_id) REFERENCES PARK (PARK_id);

ALTER TABLE POINT ADD CONSTRAINT FK_POINT_PARK 
	FOREIGN KEY (PARK_id) REFERENCES PARK (PARK_id);

ALTER TABLE USER ADD CONSTRAINT FK_USER_PARK 
	FOREIGN KEY (PARK_id) REFERENCES PARK (PARK_id)
	ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE USER ADD CONSTRAINT FK_USER_POINT 
	FOREIGN KEY (USERPOINT_id) REFERENCES POINT (POINT_id);

ALTER TABLE USER ADD CONSTRAINT FK_USER_POINT 
	FOREIGN KEY (carPOINT_id) REFERENCES POINT (POINT_id);
